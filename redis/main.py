import redis
import psycopg2
import json
from config import host, user, password, db_name, port


def get_igor():
    try:
        # connection
        db_connection = psycopg2.connect(
            host=host,
            user=user,
            password=password,
            database=db_name,
            port=port
        )
        db_connection.autocommit = True
    
        # cursor creation
        # with db_connection.cursor() as cursor:
        #     cursor.execute('select version()')
        #     print(f'Version - {cursor.fetchone()}')
    
        # table creation
        # with db_connection.cursor() as cursor:
        #     cursor.execute('''CREATE TABLE IF NOT EXISTS tem_usr (
        #         id int GENERATED BY DEFAULT as IDENTITY,
        #         f_name varchar(50) NOT NULL,
        #         l_name varchar(50)
        #     );
        #     ''')
        #     print(f'Table was created')
    
        # table insert
        # with db_connection.cursor() as cursor:
        #     cursor.execute('''INSERT INTO tem_usr (f_name, l_name)
        #     VALUES ('Igor', 'Noggin');
        #     ''')
        #     print('Insertion into table')

        # Redis cache
        with redis.Redis(host='192.168.42.80', port='6379', db=0) as rc:
            cache_val = rc.get('tem_usr')

        if cache_val:
            return json.loads(cache_val)
        else:
            # table select
            with db_connection.cursor() as cursor:
                cursor.execute('''SELECT * FROM tem_usr''')
                result = cursor.fetchall()
                with redis.Redis(host='192.168.42.80', port='6379', db=0) as rc:
                    rc.set('tem_usr', json.dumps(result), ex=300)
    
        # table drop
        # with db_connection.cursor() as cursor:
        #     cursor.execute('''DROP TABLE tem_usr;''')
        #     print(f'Table was dropped')
    except Exception as _ex:
        print('error working with Postgresql')
    finally:
        if db_connection:
            db_connection.close()
            print('DB connection closed')

    return result


print(get_igor())


